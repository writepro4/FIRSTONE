1. 스프링 mvc(model view Controller Framework)
- 스프링이 제공하는 트랜잭션 처리, DI, AOP를 손쉽게 사용
- 스트럿츠2와 같은 프레임워크와 연동이 쉬움
-----------------------------------------------------
2. 스프링 mvc 주요 구성 요소 및 처리 흐름
- 다른 mvc 프레임워크와 마찬가지로 컨트롤러를 사용하여 요청을 처리
- 스프링에서는 DispatcherServlet이 MVC에서의 컨트롤러 부분을 처리 

구성 요소 / 설명
DispatcherServlet - 클라이언트의 요청을 전달받아 요청에 맞는 컨트롤러가 리턴한 결과값을 view에 전달하여 알맞은 응답을 생성
HandlerMapping - 클라이언트의 요청 URL을 어떤 컨트롤러가 처리할지 결정
Controller - 클라이언트의 요청을 처리한 뒤, 결과를 DispatcherServlet에게 리턴
ModelAndView - 컨트롤러가 처리한 결과 정보 및 뷰 선택에 필요한 정보를 담음
ViewResolver - 컨트롤러의 처리 결과를 생성할 뷰를 결정
View - 컨트롤러의 처리 결과 화면을 생성, JSP 또는 Velocity 템플릿 파일 등을 뷰로 사용
------------------------------------------------------------
3. 스프링 MVC 개발
- 클라이언트에 요청을 받을 DispatcherServlet을 web.xml 파일에 설정
- 클라이언트의 요청을 처리할 컨트롤러 작성
- ViewResolver 설정 (컨트롤러가 전달한 값을 이용해서 응답 화면을 생성할 뷰를 결정)
- JSP나 Velocity 등을 이용하여 뷰영역의 코드를 작성

3.1
------------------------------------------------------------
------------------------------------------------------------
------------------------------------------------------------
------------------------------------------------------------
------------------------------------------------------------
------------------------------------------------------------
------------------------------------------------------------
------------------------------------------------------------
------------------------------------------------------------
------------------------------------------------------------

Spring Bean이란?
Pojo -> Beans
Beans -> Spring IOC컨테이너에 의해 인스턴스화, 관리, 생성
Beans -> (설정 메타 데이터)XML에 의해 생성된다
	-이 메타 데이터를 통해 Bean생성,
	BeanLIfe Cycle, Bean Dependency 를 알수있다.
애플리케이션의 객체가 지정되면, 해당 객체는 getBean()메서드를 통해 가져올 수 있다.

Spring Bean정의
- 일반적으로 XML파일에 정의
- 주요 속성
	- class(필수) : 정규화된 자바 클래스 이름
	- id: bean의 고유 식별자
	- scope: 객체의 범위(sigleton, prototype)
	- constructor-arg: 생성 시 생성자에 전달할 인수
	- property: 생성 시 bean setter에 전달할 인수
	- init method와 destroy method

Spring Bean Scope
스프링은 기본적으로 모든 baen을 singleton으로 생성, 관리
	- 구체적으로 jvm안에서 스프링이 bean마다 하나의 객체 생성
	- 그래서 우리는 스프링을 통해 baen을 제공받으면 주입받은 bean은 동일한 객체라는
	가정하에 개발을 함
-request, session, global session의 scope는 일반 spring어플리케이션이 아닌, spring MVC Web Application에서만 사용

Scope / Description
singleton - 하나의 Bean정의에 대해서 Spring IOC Container 내에 단 하나의 객체만 존재한다.
prototype - 하나의 Bean 정의에 대해서 다수의 객체가 존재할 수 있다.
request = 하나의 Bean 정의에 대해서 하나의 HTTP request의 생명주기 안에 단 하나의 객체만 존재한다.
	 즉, 각각의 HTTP request는 자신만의 객체를 가진다.
	 Web-aware SpringApplicationContext안에서만 유효하다.
global session - 하나의 bean정의에 대해서 하나의 globalHTTP Session의 생명주기 안에 단 하나의 객체만 존재한다
		Pro
